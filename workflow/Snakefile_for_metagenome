rule run_pbsim3_ont:
    input:
        reference="data/regional_reference/{sample}/{region}/reference.fasta.gz",
        model="resources/pbsim/ERRHMM-ONT-HQ.model",
    output:
        folder=directory(
            "data/regional_reads/{sample}/{region}/pbsim_ONT_{accuracy}_{length_kb}k"
        ),
        fasta="data/regional_reads/{sample}/{region}/pbsim_ONT_{accuracy}_{length_kb}k/reads.fasta.gz",
        maf="data/regional_reads/{sample}/{region}/pbsim_ONT_{accuracy}_{length_kb}k/alignment.maf.gz",
    wildcard_constraints:
        accuracy=r"\d+",
        length_kb=r"\d+",
    params:
        accuracy=lambda wildcards: float(wildcards["accuracy"]) / 100,
        length_mean=lambda wildcards: int(wildcards["length_kb"]) * 1000,
        length_sd=lambda wildcards: int(wildcards["length_kb"]) * 500,
        length_min=10_000,
        depth=20,
        seed=5023967,
    conda:
        "envs/pbsim.yaml"
    shell:
        """
        gunzip -c {input.reference} \
        | pbsim \
            --strategy wgs \
            --method errhmm \
            --errhmm {input.model} \
            --depth {params.depth} \
            --accuracy-mean {params.accuracy} \
            --length-mean {params.length_mean} \
            --length-sd  {params.length_sd} \
            --length-min {params.length_min} \
            --genome /dev/stdin \
            --seed {params.seed} \
            --prefix {output.folder}/output
        sed -n '1~4s/^@/>/p;2~4p' {output.folder}/output_0001.fastq | gzip -c > {output.fasta}
        gzip -c {output.folder}/output_0001.maf > {output.maf}
        rm -rf {output.folder}/output*
        """

rule run_pbsim3_pb_hifi:
    input:
        reference="data/regional_reference/{sample}/{region}/reference.fasta.gz",
        model="resources/pbsim/ERRHMM-SEQUEL.model",
    output:
        folder=directory(
            "data/regional_reads/{sample}/{region}/pbsim_pb_hifi_{length_kb}k"
        ),
        fasta="data/regional_reads/{sample}/{region}/pbsim_pb_hifi_{length_kb}k/reads.fasta.gz",
        maf="data/regional_reads/{sample}/{region}/pbsim_pb_hifi_{length_kb}k/alignment.maf.gz",
    params:
        length_mean=lambda wildcards: int(wildcards["length_kb"]) * 1000,
        pass_num=10,
        depth=20,
        seed=5023967,
    conda:
        "envs/pbsim.yaml"
    shell:
        """
        gunzip -c {input.reference} \
        | pbsim \
            --strategy wgs \
            --method errhmm \
            --errhmm {input.model} \
            --depth {params.depth} \
            --length-mean {params.length_mean} \
            --pass-num {params.pass_num} \
            --genome /dev/stdin \
            --seed {params.seed} \
            --prefix {output.folder}/output
        samtools sort -@ 10  {output.folder}/output_0001.sam -o  {output.folder}/output_0001.bam
        ccs  -j 10 {output.folder}/output_0001.bam  {output.folder}/output_hifi.fastq.gz
        gunzip -c {output.folder}/output_hifi.fastq.gz | sed -n '1~4s/^@/>/p;2~4p' | gzip -c > {output.fasta}
        gzip -c {output.folder}/output_0001.maf > {output.maf}
        rm -rf {output.folder}/output*
        """